# eslint-snapshot-rule-tester format: v1


Test: prefer-math-sum-precise >> invalid
Filename: prefer-math-sum-precise/invalid/each-input.js

Code:
  1 | /*prefer-math-sum-precise/invalid/each-input.js*/
  2 | let sum = 0;
  3 | for (const value of [1, 2, 3]) {
    | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\ [1]
  4 |   sum += value;
    | ~~~~~~~~~~~~~~~\ [1]
  5 | }
    | ~ [1]
  6 | x = sum;
  7 |
  8 | let sum2 = 0;
  9 | [4, 5, 6].forEach((value) => {
    | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\ [2]
 10 |   sum2 += value;
    | ~~~~~~~~~~~~~~~~\ [2]
 11 | });
    | ~~ [2]
 12 | x = sum2;
 13 |
 14 | let sum3 = 0;
 15 | for (const value of [1, 2, 3]) {
    | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\ [3]
 16 |   sum3 = sum3 + value;
    | ~~~~~~~~~~~~~~~~~~~~~~\ [3]
 17 | }
    | ~ [3]
 18 | x = sum3;
 19 |
 20 | let sum4 = 0;
 21 | for (const value of [1, 2, 3]) {
    | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\ [4]
 22 |   sum4 = value + sum4;
    | ~~~~~~~~~~~~~~~~~~~~~~\ [4]
 23 | }
    | ~ [4]
 24 | x = sum4;
 25 |

Output: unchanged

[1] Can use 'Math.sumPrecise(array)' instead of summing each value.
    Suggestions:
      - Replace using 'Math.sumPrecise()'.
        Output:
          1 | /*prefer-math-sum-precise/invalid/each-input.js*/
          2 | let sum = 0;
          3 | sum += Math.sumPrecise([1, 2, 3])
          4 | x = sum;
          5 |
          6 | let sum2 = 0;
          7 | [4, 5, 6].forEach((value) => {
          8 |   sum2 += value;
          9 | });
         10 | x = sum2;
         11 |
         12 | let sum3 = 0;
         13 | for (const value of [1, 2, 3]) {
         14 |   sum3 = sum3 + value;
         15 | }
         16 | x = sum3;
         17 |
         18 | let sum4 = 0;
         19 | for (const value of [1, 2, 3]) {
         20 |   sum4 = value + sum4;
         21 | }
         22 | x = sum4;
         23 |
[2] Can use 'Math.sumPrecise(array)' instead of summing each value.
    Suggestions:
      - Replace using 'Math.sumPrecise()'.
        Output:
          1 | /*prefer-math-sum-precise/invalid/each-input.js*/
          2 | let sum = 0;
          3 | for (const value of [1, 2, 3]) {
          4 |   sum += value;
          5 | }
          6 | x = sum;
          7 |
          8 | let sum2 = 0;
          9 | sum2 += Math.sumPrecise([4, 5, 6]);
         10 | x = sum2;
         11 |
         12 | let sum3 = 0;
         13 | for (const value of [1, 2, 3]) {
         14 |   sum3 = sum3 + value;
         15 | }
         16 | x = sum3;
         17 |
         18 | let sum4 = 0;
         19 | for (const value of [1, 2, 3]) {
         20 |   sum4 = value + sum4;
         21 | }
         22 | x = sum4;
         23 |
[3] Can use 'Math.sumPrecise(array)' instead of summing each value.
    Suggestions:
      - Replace using 'Math.sumPrecise()'.
        Output:
          1 | /*prefer-math-sum-precise/invalid/each-input.js*/
          2 | let sum = 0;
          3 | for (const value of [1, 2, 3]) {
          4 |   sum += value;
          5 | }
          6 | x = sum;
          7 |
          8 | let sum2 = 0;
          9 | [4, 5, 6].forEach((value) => {
         10 |   sum2 += value;
         11 | });
         12 | x = sum2;
         13 |
         14 | let sum3 = 0;
         15 | sum3 += Math.sumPrecise([1, 2, 3])
         16 | x = sum3;
         17 |
         18 | let sum4 = 0;
         19 | for (const value of [1, 2, 3]) {
         20 |   sum4 = value + sum4;
         21 | }
         22 | x = sum4;
         23 |
[4] Can use 'Math.sumPrecise(array)' instead of summing each value.
    Suggestions:
      - Replace using 'Math.sumPrecise()'.
        Output:
          1 | /*prefer-math-sum-precise/invalid/each-input.js*/
          2 | let sum = 0;
          3 | for (const value of [1, 2, 3]) {
          4 |   sum += value;
          5 | }
          6 | x = sum;
          7 |
          8 | let sum2 = 0;
          9 | [4, 5, 6].forEach((value) => {
         10 |   sum2 += value;
         11 | });
         12 | x = sum2;
         13 |
         14 | let sum3 = 0;
         15 | for (const value of [1, 2, 3]) {
         16 |   sum3 = sum3 + value;
         17 | }
         18 | x = sum3;
         19 |
         20 | let sum4 = 0;
         21 | sum4 += Math.sumPrecise([1, 2, 3])
         22 | x = sum4;
         23 |
---


Test: prefer-math-sum-precise >> invalid
Filename: prefer-math-sum-precise/invalid/example-input.js

Code:
  1 | /*prefer-math-sum-precise/invalid/example-input.js*/
  2 | /* ✓ GOOD */
  3 | x = Math.sumPrecise([1, 2, 3]);
  4 |
  5 | /* ✗ BAD */
  6 | x = [1, 2, 3].reduce((a, b) => a + b, 0);
    |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ [1]
  7 | let sum = 0;
  8 | for (const value of [1, 2, 3]) {
    | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\ [2]
  9 |   sum += value;
    | ~~~~~~~~~~~~~~~\ [2]
 10 | }
    | ~ [2]
 11 | x = sum;
 12 |

Output:
  1 | /*prefer-math-sum-precise/invalid/example-input.js*/
  2 | /* ✓ GOOD */
  3 | x = Math.sumPrecise([1, 2, 3]);
  4 |
  5 | /* ✗ BAD */
  6 | x = Math.sumPrecise([1, 2, 3]);
  7 | let sum = 0;
  8 | for (const value of [1, 2, 3]) {
  9 |   sum += value;
 10 | }
 11 | x = sum;
 12 |

[1] Can use 'Math.sumPrecise(array)' instead of 'array.reduce()'.
[2] Can use 'Math.sumPrecise(array)' instead of summing each value.
    Suggestions:
      - Replace using 'Math.sumPrecise()'.
        Output:
          1 | /*prefer-math-sum-precise/invalid/example-input.js*/
          2 | /* ✓ GOOD */
          3 | x = Math.sumPrecise([1, 2, 3]);
          4 |
          5 | /* ✗ BAD */
          6 | x = [1, 2, 3].reduce((a, b) => a + b, 0);
          7 | let sum = 0;
          8 | sum += Math.sumPrecise([1, 2, 3])
          9 | x = sum;
         10 |
---


Test: prefer-math-sum-precise >> invalid
Filename: prefer-math-sum-precise/invalid/reduce-input.js

Code:
  1 | /*prefer-math-sum-precise/invalid/reduce-input.js*/
  2 | x = [1, 2, 3].reduce((a, b) => a + b, 0);
    |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ [1]
  3 | x = [1, 2, 3].reduce((a, b) => b + a, 0);
    |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ [2]
  4 | x = [1, 2, 3].reduce((a, b) => {
    |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\ [3]
  5 |   // This is a comment
    | ~~~~~~~~~~~~~~~~~~~~~~\ [3]
  6 |   return a + b;
    | ~~~~~~~~~~~~~~~\ [3]
  7 | }, 0);
    | ~~~~~ [3]
  8 |

Output:
  1 | /*prefer-math-sum-precise/invalid/reduce-input.js*/
  2 | x = Math.sumPrecise([1, 2, 3]);
  3 | x = Math.sumPrecise([1, 2, 3]);
  4 | x = [1, 2, 3].reduce((a, b) => {
  5 |   // This is a comment
  6 |   return a + b;
  7 | }, 0);
  8 |

[1] Can use 'Math.sumPrecise(array)' instead of 'array.reduce()'.
[2] Can use 'Math.sumPrecise(array)' instead of 'array.reduce()'.
[3] Can use 'Math.sumPrecise(array)' instead of 'array.reduce()'.
    Suggestions:
      - Replace using 'Math.sumPrecise()'.
        Output:
          1 | /*prefer-math-sum-precise/invalid/reduce-input.js*/
          2 | x = [1, 2, 3].reduce((a, b) => a + b, 0);
          3 | x = [1, 2, 3].reduce((a, b) => b + a, 0);
          4 | x = Math.sumPrecise([1, 2, 3]);
          5 |
---
